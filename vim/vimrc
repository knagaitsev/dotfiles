
"////////////////////////////////////////////////////////
"           ██
"          ░░
"  ██    ██ ██ ██████████  ██████  █████
" ░██   ░██░██░░██░░██░░██░░██░░█ ██░░░██
" ░░██ ░██ ░██ ░██ ░██ ░██ ░██ ░ ░██  ░░
"  ░░████  ░██ ░██ ░██ ░██ ░██   ░██   ██
"   ░░██   ░██ ███ ░██ ░██░███   ░░█████
"    ░░    ░░ ░░░  ░░  ░░ ░░░     ░░░░░
"
"    author: nick wanninger
"    email:  nickwanninger@gmail.com
"
"////////////////////////////////////////////////////////




" a spot for general configuration and whatnot

" Don't try to be vi compatible
scriptencoding utf-8
filetype off
set nocompatible " Disable vi-compatibility
set noshowmode
set laststatus=0
set winminheight=0
noremap <C-A-left> <C-W>h<C-W>_
noremap <C-A-right> <C-W>l<C-W>_
set splitbelow
set splitright
set noeol
set tabstop=2
set shiftwidth=2
set nofoldenable     "don't fold by default
set foldmethod=indent   " fold on indentations
set foldnestmax=10   "only fold up to 10 levels
set foldlevel=1     " only show me first fold level
let g:indentLine_enabled = 1
set visualbell t_vb= " disable visual bell
set ttyfast  " we have a fast terminal
set lazyredraw
set backspace=indent,eol,start
set clipboard=unnamed
set mouse=a
set cursorline
set pastetoggle=<F2>
set sidescroll=10
set matchpairs+=<:>
set incsearch
set ignorecase
set smartcase
set showmatch
set smartindent
set noswapfile
set nobackup
set nowritebackup

set undofile
set undodir=~/.tmp//,/tmp//

set hidden

set shell=/bin/sh

"//////////////////////////
"//                      //
"//        PLUGINS       //
"//                      //
"//////////////////////////

call plug#begin('~/.vim/plugged')

Plug 'christoomey/vim-tmux-navigator'
Plug 'bfrg/vim-cpp-modern'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'scrooloose/nerdtree'
Plug 'rhysd/vim-clang-format'
" Plug 'flazz/vim-colorschemes'

Plug 'lluchs/vim-wren'


" Plug 'Valloric/YouCompleteMe', { 'do': './install.py --clang-completer' }
Plug 'jremmen/vim-ripgrep'
Plug 'dag/vim-fish'
Plug 'wsdjeg/FlyGrep.vim'
Plug 'rust-lang/rust.vim'

Plug 'neoclide/coc.nvim', {'branch': 'release'}

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'stsewd/fzf-checkout.vim'

Plug 'kdheepak/lazygit.nvim'

Plug 'gruvbox-community/gruvbox'

call plug#end()


" Most important thing first -- Colors
syntax enable

set background=dark
" colorscheme gruvbox
colorscheme brogrammer


" Overwrite all colorscheme stuff
hi Normal  ctermbg=NONE guibg=NONE
hi NonText ctermbg=NONE guibg=NONE
hi SignColumn  ctermbg=NONE guibg=NONE


nnoremap <C-p> :GFiles<CR>
nnoremap <C-f> :Files<CR>


" Symbol renaming.
nmap <leader>rn <Plug>(coc-rename)

" Use K to show documentation in preview window.
nnoremap <silent> K :call <SID>show_documentation()<CR>

function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  else
    call CocAction('doHover')
  endif
endfunction


let g:rustfmt_autosave = 1

" Highlight the symbol and its references when holding the cursor.
autocmd CursorHold * silent call CocActionAsync('highlight')

let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.9, 'highlight': 'Comment' } }
" let g:fzf_preview_window = 'bottom:30%'
let $FZF_DEFAULT_OPTS="--reverse"
" hit \gc to open the git branch checkout
nnoremap <leader>gc :GCheckout<CR>



"////////////////////////////////////////////////////////
" Make nasm the default assembly syntax
let g:asmsyntax = 'nasm'


filetype plugin indent on    " required




"////////////////////////////////////////////////////////
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_auto_colors = 0
"////////////////////////////////////////////////////////




"////////////////////////////////////////////////////////
let g:tmux_navigator_no_mappings = 1 " disable builtin mappings, I think
nnoremap <silent> <M-Left> :TmuxNavigateLeft<cr>
nnoremap <silent> <M-Down> :TmuxNavigateDown<cr>
nnoremap <silent> <M-Up> :TmuxNavigateUp<cr>
nnoremap <silent> <M-Right> :TmuxNavigateRight<cr>
"////////////////////////////////////////////////////////



"////////////////////////////////////////////////////////
let g:indentLine_fileTypeExclude=['help']
let g:indentLine_bufNameExclude=['NERD_tree.*']
"////////////////////////////////////////////////////////


"////////////////////////////////////////////////////////
filetype plugin indent on

hi CocFloat ctermbg=238 ctermfg=15
hi CocFloating ctermbg=238 guibg=238 ctermfg=15
hi Pmenu ctermbg=238 guibg=238 ctermfg=15

let g:gitgutter_max_signs = 500

let g:gitgutter_override_sign_column_highlight = 0
highlight clear SignColumn
highlight GitGutterAdd ctermfg=2
highlight GitGutterChange ctermfg=3
highlight GitGutterDelete ctermfg=1
highlight GitGutterChangeDelete ctermfg=4


highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+\%#\@<!$/
"////////////////////////////////////////////////////////

" enable italics mode and other things
let &t_ZH="\e[3m"
let &t_ZR="\e[23m"


" highlight clear SignColumn

" disable folding, hopefully. Its the worse
set nofoldenable " folding sucks

" show unicode glyphs
set encoding=utf-8 " Necessary to show Unicode glyphs

au BufRead,BufNewFile *.hbs set filetype=html

" setup some filetype mappings
" au BufRead,BufNewFile *.g set filetype=geode
" au BufRead,BufNewFile *.wl set filetype=clojure
" au BufRead,BufNewFile *.cdr set filetype=clojure
" au BufRead,BufNewFile *.rad set filetype=radon
" au BufRead,BufNewFile *.x set filetype=alex
" au BufRead,BufNewFile *.he set filetype=helion
" au BufRead,BufNewFile *.cr set filetype=ruby
" autocmd Filetype c setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
" autocmd Filetype cpp setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype haskell setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4
autocmd Filetype happy setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4
autocmd Filetype lisp setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype clojure setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2


command WQ wq
command Wq wq
command W w
command Q q
nnoremap ; :


nnoremap <leader>d "_d
xnoremap <leader>d "_d
xnoremap <leader>p "_dP

map <space> <ESC>viw
nnoremap Q q
nnoremap q <Nop>
imap <C-Bslash> λ
imap <C-w> <esc>dbi



nnoremap <leader>m :make<CR>


" This keeps the current visual block selection active
" after changing indent with '<' or '>'. Usually the
" visual block selection is lost after you shift it,
" which is incredibly annoying.
vmap > >gv
vmap < <gv

" disable writing different filename with :w<filename>
:autocmd BufWritePre [:;]*
\   try | echoerr 'Forbidden file name: ' . expand('<afile>') | endtry


autocmd filetype crontab setlocal nobackup nowritebackup

" Change the scroll wheel from an actual scroll
" to just moving up and down with arrowkeys
map <ScrollWheelUp> <Up>
map <ScrollWheelDown> <Down>
map <ScrollWheelRight> <Right>
map <ScrollWheelLeft> <Left>


map <S-Up> <Up>
set nu

map <C-c> :set nu!<CR>
map <C-n> :NERDTreeToggle<CR>
map <C-q> :q<CR>
map <C-Q> :q!<CR>
map <leader>/ :let @/=''<cr>"

" nice control-s meme
noremap <C-S> :update<CR>
vnoremap <C-S> <C-C>:update<CR>
inoremap <C-S> <C-O>:update<CR>


inoremap <C-_> /*  */<Left><Left><Left>

autocmd FileType c map <leader>f :ClangFormat<CR>
autocmd FileType cpp map <leader>f :ClangFormat<CR>



" use ripgrep, as its better.
if executable('rg')
    set grepprg=rg\ --nogroup\ --nocolor\ --column
    set grepformat=%f:%l:%c%m
endif

